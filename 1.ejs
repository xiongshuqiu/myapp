// (2) 提交更新后的员工档案数据
const updateEmployeeRecord = async (req, res) => {
  const { _id } = req.params;
  const {
    employeeId, employeeName, position, contactNumber, email, userId, status
  } = req.body;

  console.log('Received request to update employee record with data:', req.body); // 调试信息
  try {
    const existingEmployee = await Employee.findById(_id);
    if (!existingEmployee) {
      console.warn(`Employee record not found with ID: ${_id}`); // 调试信息
      return res
        .status(404)
        .json({ success: false, message: 'Employee record not found' });
    }

    // 如果 userId 改变，更新原来的 userId 状态为 'Available'
    if (existingEmployee.userId && existingEmployee.userId !== userId) {
      await User.findOneAndUpdate({ userId: existingEmployee.userId }, { status: 'Available' });
    }

    // 如果新的 userId 被使用，更新 userId 状态为 'Occupied'
    if (userId) {
      await User.findOneAndUpdate({ userId: userId }, { status: 'Occupied' });
    }

    // 更新员工档案
    existingEmployee.employeeId = employeeId;
    existingEmployee.employeeName = employeeName;
    existingEmployee.position = position;
    existingEmployee.contactNumber = contactNumber;
    existingEmployee.email = email;
    existingEmployee.userId = userId;
    existingEmployee.status = status;

    await existingEmployee.save();

    console.log(
      'Employee record updated successfully:',
      existingEmployee,
    ); // 调试信息
    return res.status(200).json({
      success: true,
      message: 'Employee record updated successfully',
      data: existingEmployee,
    });
  } catch (error) {
    console.error('Error updating employee record:', error.message); // 调试信息
    return res.status(500).json({
      success: false,
      message: 'An error occurred',
      error: error.message,
    });
  }
};
